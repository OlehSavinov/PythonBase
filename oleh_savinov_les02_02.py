# 1. Написать функцию, которая генерирует последовательность из n чисел Фибоначчи (n принимается как аргумент).
# Воспользоваться оператором "yield"
def fibonach(n):
    fib1, fib2 = 0, 1
    yield 1
    for i in range(n-1):
        fib = fib1 + fib2
        yield fib
        fib1, fib2 = fib2, fib


# 3. Написать функцию, которая принимает неограниченное количество аргументов и возвращает максимальный четный аргумент
def max_even(*args):
    return max([a for a in args if a % 2 == 0])


# 4. Написать функцию, которая как аргумент принимает имя (текстом) одной из 4-х арифметических операций
# (сумма, сложение, вычитание, деление) и возвращает другую функцию, которая выполняет эту операцию для 2х переменных
def func_oper(op):
    if op == 'сумма':
        return lambda x, y: x + y
    elif op == 'вычитание':
        return lambda x, y: x - y
    elif op == 'умножение':
        return lambda x, y: x * y
    elif op == 'деление':
        return lambda x, y: x / y


# 5. Используя функцию из предыдущей задачи создать список из полученных функций (выполняющих арифметические операции)
# и применить их по очереди к одной и той же паре аргументов
l_func = [func_oper('сумма'), func_oper('вычитание'), func_oper('умножение'), func_oper('деление')]
x, y = 78, 64
res = [f(x, y) for f in l_func]
print(res)


# 2. Дано кортеж слов
# Задача: создать список, состоящий только из палиндромов
words_tuple = ("demigod", "rewire", "madam", "freer", "anutforajaroftuna", "kiosk")
res = list(filter(lambda s: s == s[::-1], words_tuple))
print(res)


# 3. Дано: 2 списка чисел
# Задача: создать список, элементы которого равны произведениям этих списков
list1 = [1, 2, 3]
list2 = [3, 4, 5]
res = list(map(lambda x, y: x * y, list1, list2))
print(res)


# 4. Дано: таблица с информацией о сотрудниках. Каждый вложенный список содержит следующие элементы:
# номер сотрудника, департамент, ЗП и год приема на работу
# Задача: вывести на экран информацию о сотрудниках, принятых на работу после 2012 года и с ЗП выше 2000.
# Информация должна быть в следующем текстовом формате: "Number: 1, Dep: B, Salary: 1000, Year: 2019"
workers_table = [
    [1, 'B', 1000, 2013],
    [2, 'B', 1500, 2014],
    [3, 'B', 1800, 2012],
    [4, 'A', 2500, 2016],
    [5, 'A', 3500, 2017],
    [6, 'A', 4500, 2011],
]
res = list(filter(lambda l: l[3] > 2012 and l[2] > 2000, workers_table))
print([f'Number: {cont[0]}, Dep: {cont[1]}, Salary: {cont[2]}, Year: {cont[3]}' for cont in res])


# 5. Дано: два списка чисел
# Задача: добавить из второго списка в первый только те элементы, которых в нем еще нет
num_list = [1, 2, 3, 4, 5]
list_to_add = [1, 2, 3, 10, 100]
res = num_list + list(filter(lambda el: el not in num_list, list_to_add))
print(res)
